#!/usr/bin/ruby -w
#
# Wrapper for all MultiDistroTools scripts. Does the option parsing for --help,
# --verbose
#
# TODO
# - rewrite in another language to relax the dependancy on ruby1.8

$scriptsdir = ENV['MDT_SCRIPTSDIR'] ? ENV['MDT_SCRIPTSDIR'] : '/usr/share/multidistrotools/'
$scriptsdir += '/' if $scriptsdir !~ /\/$/
COMMANDS = {
# name, destfile, description
 'test' => [$scriptsdir + 'test.bash', 'Test script for MultiDistroTools'],
 'bin2src' => [ $scriptsdir + 'bin2src.py', 'Show source packages for binary packages' ],
 'dist-bin2src' => [ $scriptsdir + 'dist-bin2src.py', 'Show source packages for binary packages using an APT tree' ],
 'src2bin' => [ $scriptsdir + 'src2bin.bash', 'Show binary packages for source packages' ],
 'unify' => [ $scriptsdir + 'unify.bash', 'Sort and remove duplicate lines' ],
 'list_union' => [ $scriptsdir + 'list_union.bash', 'Write the union of two lists' ],
 'list_inter' => [ $scriptsdir + 'list_inter.bash', 'Write the intersection of two lists' ],
 'list_diff' => [ $scriptsdir + 'list_diff.bash', 'Write the difference of two lists' ],
 'list_sub' => [ $scriptsdir + 'list_sub.bash', 'Write list1 minus list2' ],
 'filter' => [ $scriptsdir + 'filter.rb', 'Filter lines on stdin with a file' ],
 'sort_with' => [ $scriptsdir + 'sort_with.rb', 'Sort lines on stdin according to a file on stdout' ],
 'versions_exclude_same' => [ $scriptsdir + 'versions_exclude_same.bash', 'Take a list of packages generated by compare-versions and exclude lines where the two versions are the same' ],
 'popcon' => [ $scriptsdir + 'popcon.bash', 'List popcon results' ],
 'depends' => [ $scriptsdir + 'depends.bash', 'List packages using Depends or reverse Depends' ],
 'compare-versions' => [ $scriptsdir + 'compare-versions.bash', 'List packages with their versions in Debian and Ubuntu' ],
 'versions2html' => [ $scriptsdir + 'versions2html.rb', 'Generate an HTML report from compare-versions\' output' ],
 'dist-create' => [ $scriptsdir + 'dist-create.bash', 'Creates an APT tree for another distribution' ],
 'dist-apt-get' => [ $scriptsdir + 'dist-apt-get.bash', 'Executes apt-get in another APT tree.' ],
 'tmp-apt-rdepends' => [ $scriptsdir + 'tmp-apt-rdepends', 'apt-rdepends with patch (suggested to Debian, see bug #346140)'],
 'dist-grep-dctrl-sources' => [ $scriptsdir + 'dist-grep-dctrl-sources.bash', 'Executes grep-dctrl on *Sources lists in another APT tree.' ],
 'dist-grep-dctrl-packages' => [ $scriptsdir + 'dist-grep-dctrl-packages.bash', 'Executes grep-dctrl on *Packages lists in another APT tree.' ],
 'dist-apt-cache' => [ $scriptsdir + 'dist-apt-cache.bash', 'Executes apt-cache in another APT tree.' ],
 'motunotes' => [ $scriptsdir + 'motunotes.bash', 'Get the comments from https://wiki.ubuntu.com/MOTUNotes.' ],
 'mergelist2comments' => [ $scriptsdir + 'mergelist2comments.rb', 'Convert the output from sistpoty\'s mergeWebTool.' ],
 'removals' => [ $scriptsdir + 'removals.py', 'Mark packages removed from Debian as such.' ],
}

idx = 0

def show_help(arg)
	STDERR.puts "MultiDistroTools - https://wiki.ubuntu.com/MultiDistroTools"
	STDERR.puts "-----------------------------------------------------------"
	if COMMANDS[arg]
		run_command(COMMANDS[arg][0], ['--help'])
	else
		STDERR.puts "To see help on the specific command, use mdt --help command"
		STDERR.puts "To run one of those commands, use mdt command [command args]"
		COMMANDS.to_a.sort { |a, b| a[0] <=> b[0] }.each do |i|
			STDERR.puts "   #{i[0]} - #{i[1][1]}"
		end
	end
end

def run_command(cmd, args)
	exec(cmd, *args)
end

if ARGV.length == 0
	show_help(nil)
	exit(0)
end

done = false
while idx < ARGV.length
	a = ARGV[idx]
	case 
	when a == '-v' || a == '--verbose' then
		ENV['MDT_VERBOSE'] = '1'
		idx += 1
	when a == '-V' || a == '--version' then
		STDERR.puts 'Not Implemented Yet'
		exit(0)
	when a == '-h' || a == '--help' then
		show_help(ARGV[idx+1] || nil)
		exit(0)
	else
		if COMMANDS[a]
			run_command(COMMANDS[a][0], ARGV[idx+1..-1])
		else
			STDERR.puts "Unknown command #{a}. See mdt --help."
		end
		done = true
		idx += 1
	end
end

if !done
	STDERR.puts 'See mdt --help'
end
