diff -Nurp ../../svn/pkg-multidistrotools/multidistrotools/trunk/debian/control ./debian/control
--- ../../svn/pkg-multidistrotools/multidistrotools/trunk/debian/control	2013-12-08 09:53:50.309977537 +0100
+++ ./debian/control	2013-12-08 09:56:02.860038000 +0100
@@ -6,7 +6,7 @@ Build-Depends-Indep: debhelper (>= 4)
 Standards-Version: 3.7.2
 
 Package: multidistrotools
-Depends: ruby, apt-rdepends, rsync, python, python-apt, perl
+Depends: ruby, apt-rdepends, rsync, python, python-apt, perl, grep-dctrl, libopenssl-ruby
 Architecture: all
 Description: Useful scripts for Debian derivatives developers
  MultiDistroTools provides Debian derivatives developers with some useful
diff -Nurp ../../svn/pkg-multidistrotools/multidistrotools/trunk/diff ./diff
--- ../../svn/pkg-multidistrotools/multidistrotools/trunk/diff	1970-01-01 01:00:00.000000000 +0100
+++ ./diff	2013-12-08 10:00:27.352989446 +0100
@@ -0,0 +1,12 @@
+diff -Nurp ../../svn/pkg-multidistrotools/multidistrotools/trunk/debian/control ./debian/control
+--- ../../svn/pkg-multidistrotools/multidistrotools/trunk/debian/control	2013-12-08 09:53:50.309977537 +0100
++++ ./debian/control	2013-12-08 09:56:02.860038000 +0100
+@@ -6,7 +6,7 @@ Build-Depends-Indep: debhelper (>= 4)
+ Standards-Version: 3.7.2
+ 
+ Package: multidistrotools
+-Depends: ruby, apt-rdepends, rsync, python, python-apt, perl
++Depends: ruby, apt-rdepends, rsync, python, python-apt, perl, grep-dctrl, libopenssl-ruby
+ Architecture: all
+ Description: Useful scripts for Debian derivatives developers
+  MultiDistroTools provides Debian derivatives developers with some useful
diff -Nurp ../../svn/pkg-multidistrotools/multidistrotools/trunk/mdt ./mdt
--- ../../svn/pkg-multidistrotools/multidistrotools/trunk/mdt	2013-12-08 09:53:50.325976958 +0100
+++ ./mdt	2013-12-08 09:56:02.860038000 +0100
@@ -15,12 +15,16 @@ COMMANDS = {
  'dist-bin2src' => [ $scriptsdir + 'dist-bin2src.py', 'Show source packages for binary packages using an APT tree' ],
  'src2bin' => [ $scriptsdir + 'src2bin.bash', 'Show binary packages for source packages' ],
  'unify' => [ $scriptsdir + 'unify.bash', 'Sort and remove duplicate lines' ],
+ 'list_union' => [ $scriptsdir + 'list_union.bash', 'Write the union of two lists' ],
+ 'list_inter' => [ $scriptsdir + 'list_inter.bash', 'Write the intersection of two lists' ],
+ 'list_diff' => [ $scriptsdir + 'list_diff.bash', 'Write the difference of two lists' ],
+ 'list_sub' => [ $scriptsdir + 'list_sub.bash', 'Write list1 minus list2' ],
+ 'filter' => [ $scriptsdir + 'filter.rb', 'Filter lines on stdin with a file' ],
  'sort_with' => [ $scriptsdir + 'sort_with.rb', 'Sort lines on stdin according to a file on stdout' ],
  'versions_exclude_same' => [ $scriptsdir + 'versions_exclude_same.bash', 'Take a list of packages generated by compare-versions and exclude lines where the two versions are the same' ],
  'popcon' => [ $scriptsdir + 'popcon.bash', 'List popcon results' ],
  'depends' => [ $scriptsdir + 'depends.bash', 'List packages using Depends or reverse Depends' ],
  'compare-versions' => [ $scriptsdir + 'compare-versions.bash', 'List packages with their versions in Debian and Ubuntu' ],
- 'compare-bin-versions' => [ $scriptsdir + 'compare-bin-versions.pl', 'List binary packages with their versions in Debian and Ubuntu' ],
  'versions2html' => [ $scriptsdir + 'versions2html.rb', 'Generate an HTML report from compare-versions\' output' ],
  'dist-create' => [ $scriptsdir + 'dist-create.bash', 'Creates an APT tree for another distribution' ],
  'dist-apt-get' => [ $scriptsdir + 'dist-apt-get.bash', 'Executes apt-get in another APT tree.' ],
@@ -30,8 +34,7 @@ COMMANDS = {
  'dist-apt-cache' => [ $scriptsdir + 'dist-apt-cache.bash', 'Executes apt-cache in another APT tree.' ],
  'motunotes' => [ $scriptsdir + 'motunotes.bash', 'Get the comments from https://wiki.ubuntu.com/MOTUNotes.' ],
  'mergelist2comments' => [ $scriptsdir + 'mergelist2comments.rb', 'Convert the output from sistpoty\'s mergeWebTool.' ],
- 'uniqw1' => [ $scriptsdir + 'uniqw1.bash', 'Copies the removed uniq -W option.' ],
- 'compare-src-bin' => [ $scriptsdir + 'compare-src-bin.pl', 'Compare the binary packages from the sources with the really present ones.' ],
+ 'removals' => [ $scriptsdir + 'removals.py', 'Mark packages removed from Debian as such.' ],
 }
 
 idx = 0
diff -Nurp ../../svn/pkg-multidistrotools/multidistrotools/trunk/README ./README
--- ../../svn/pkg-multidistrotools/multidistrotools/trunk/README	2013-12-08 09:53:50.185982018 +0100
+++ ./README	2013-12-08 09:56:02.860038000 +0100
@@ -2,8 +2,8 @@ MultiDistroTools
 ================
 
 Most of the user documentation is on https://wiki.ubuntu.com/MultiDistroTools .
-The easiest way to learn how mdt is to use the inline help: just run
-"mdt" without any arguments.
+The easiest way to learn how mdt is to use the inline help : just run
+"mdt" with any arguments.
 
 Developer documentation
 -----------------------
diff -Nurp ../../svn/pkg-multidistrotools/multidistrotools/trunk/scripts/bin2src.py ./scripts/bin2src.py
--- ../../svn/pkg-multidistrotools/multidistrotools/trunk/scripts/bin2src.py	2013-12-08 09:53:47.470079564 +0100
+++ ./scripts/bin2src.py	2013-12-08 09:56:02.860038000 +0100
@@ -9,7 +9,7 @@ cache = apt_pkg.GetCache()
 depcache = apt_pkg.GetDepCache(cache)
 depcache.Init()
 records = apt_pkg.GetPkgRecords(cache)
-srcrecords = apt_pkg.GetPkgSrcRecords(cache)
+srcrecords = apt_pkg.GetPkgSrcRecords()
 
 def get_source_pkg(pkg, records, depcache):
         """ get the source package name of a given package """
diff -Nurp ../../svn/pkg-multidistrotools/multidistrotools/trunk/scripts/compare-bin-versions.pl ./scripts/compare-bin-versions.pl
--- ../../svn/pkg-multidistrotools/multidistrotools/trunk/scripts/compare-bin-versions.pl	2013-12-08 09:53:47.470079564 +0100
+++ ./scripts/compare-bin-versions.pl	1970-01-01 01:00:00.000000000 +0100
@@ -1,117 +0,0 @@
-#!/usr/bin/perl
-#  	 
-# compare-bin-versions.pl - Raphael Pinson <raphink@gmail.com> 	 
-# 	 
-
-use strict;
-use warnings;
-use File::HomeDir;
-use List::MoreUtils qw(uniq);
-
-my $home   = File::HomeDir->my_home;
-my $mdtdir = "$home/.multidistrotools";
-
-my ($dist1,$dist2) = @ARGV;
-
-
-if ( ! $dist1 || ! $dist2 ) {
-   die "Usage: mdt compare-bin-versions sarge etch";
-}
-
-
-my %listdir;
-
-$listdir{$dist1} = "$mdtdir/$dist1/var/lib/apt/lists";
-$listdir{$dist2} = "$mdtdir/$dist2/var/lib/apt/lists";
-
-my %packages;
-
-my %all_files;
-my %dist_files;
-
-foreach my $dist ($dist1, $dist2) {
-   opendir(LISTDIR, $listdir{$dist}) || die "Could not open dir $listdir{$dist} : $!\n"; 
-   @{$all_files{$dist}} = readdir(LISTDIR);
-   closedir(LISTDIR);
-
-   @{$dist_files{$dist}} = grep { /.*_Packages$/ } @{$all_files{$dist}};
-}
-
-
-######################################
-### Functions 
-######################################
-
-
-sub parseFile {
-   my ($file) = @_;
-
-   # Parse a source file and returns results as a hash
-
-   open(FILE, "$file") || die("Could not open $file : $!\n");
-
-   # Use %tmp hash to store tmp data
-   my %tmp;
-   my %result;
-
-   while (my $line = <FILE>) {
-      if ( $line =~ m|^$| ) {
-         # Commit data if empty line
-	 if ( $tmp{'Package'} ) {
-	    #print "Committing data for $tmp{'Package'}\n";
-	    while ( my ($field, $data) = each(%tmp) ) {
-	       if ( $field ne "Package" ) {
-                  $result{$tmp{'Package'}}{$field} = $data;
-	       }
-	    }
-	    # Reset %tmp
-	    %tmp = ();
-	 } else {
-            warn "No Package field found. Not committing data.\n";
-	 }
-      } elsif ( $line =~ m|^[a-zA-Z]| ) {
-         # Gather data
-         my ($field, $data) = $line =~ m|([a-zA-z-]+): (.*)$|;
-	 if ($data) {
-	    $tmp{$field} = $data;
-	 }
-      }
-   }
-   close(FILE);
-
-   return \%result;
-}
-
-
-
-foreach my $dist ($dist1, $dist2) {
-   foreach my $file ( @{$dist_files{$dist}} ) {
-      my $parsed_file = parseFile("$listdir{$dist}/$file");
-      foreach my $package ( keys(%{$parsed_file}) ) {
-         if ( $packages{$dist}{$package} ) {
-            warn "Package $package is alread listed for $dist. Not overriding.\n";
-	 } else {
-            $packages{$dist}{$package} = $parsed_file->{$package};
-	 }
-      }
-   }
-}
-
-
-
-# Get entire list of packages
-my @all_packages = uniq sort ( keys(%{$packages{$dist1}}), keys(%{$packages{$dist2}}) );
-
-foreach my $package (@all_packages) {
-   my $line = "$package ";
-
-   foreach my $dist ($dist1, $dist2) {
-      if ( $packages{$dist}{$package} ) {
-         $line .= "$packages{$dist}{$package}{'Version'} ";
-      } else {
-         $line .= "NOTFOUND ";
-      }
-   }
-   print "$line\n";
-}
-
diff -Nurp ../../svn/pkg-multidistrotools/multidistrotools/trunk/scripts/compare-src-bin.bash ./scripts/compare-src-bin.bash
--- ../../svn/pkg-multidistrotools/multidistrotools/trunk/scripts/compare-src-bin.bash	2013-12-08 09:53:47.470079564 +0100
+++ ./scripts/compare-src-bin.bash	1970-01-01 01:00:00.000000000 +0100
@@ -1,67 +0,0 @@
-#!/bin/bash
-#
-# compare-src-bin.bash - Raphael Pinson <raphink@gmail.com>
-# 
-# Given a distribution in mdt, this script compares the binaries that should be
-# produced by the sources with the ones really present in the repository
-#
-# The result can be useful to detect binary only uploads or FTBFS packages
-
-usage() {
-	echo "mdt compare-src-bin etch"
-}
-	
-set -e
-
-if [ $# -ne 1 ]; then
-	usage
-	exit 1
-elif [ "$1" == '--help' ]; then
-	usage
-	exit 1
-fi
-if [ ! -d $HOME/.multidistrotools/$1 ]; then
-	echo "APT tree named $1 doesn't exist in $HOME/.multidistrotools."
-	exit 1
-fi
-DIST=$1
-
-MCVDIR=$(mktemp -d /tmp/MCV.XXXXXX)
-
-
-# Print src name for the src_packages column
-#awk '/^Package:/ { p = $2} /^Binary:/ { x=2; while(x<=NF) { print $x " " p; x++} }'  $HOME/.multidistrotools/${DIST}/var/lib/apt/lists/*_Sources  | tr "," " " > $MCVDIR/src_packages
-
-
-## PROBLEM: there is no defined order between Binary and Version fields!
-## assume Version comes before Binary is our case (reprepro does that)
-# Print Version for the src_packages column
-# Warning: print bin before $2 in first awk to prevent stuff like ",,"
-#awk '/^Version:/ { bin=$2 } /^Binary:/ { print bin "," $2}' $HOME/.multidistrotools/${DIST}/var/lib/apt/lists/*_Sources | awk -F"," '{ x=2; while(x<=NF) {  if ($x != "") { print $x, $1 }; x++ }  }' | sort > $MCVDIR/src_packages
-awk '/^Version:/ { ver=$2 } /^Binary:/ { bin=""; x=2; while(x<=NF) { bin=bin $x; x++ }; print ver "," bin}'  $HOME/.multidistrotools/${DIST}/var/lib/apt/lists/*_Sources  | awk -F"," '{ x=2; while(x<=NF) {  if ($x != "") { print $x, $1 }; x++ }  }' | sort > $MCVDIR/src_packages
-
-
-# Print BIN for bin_packages
-#sed -n "s@^Package: \(.*\)@\1@p" ~/.multidistrotools/${DIST}/var/lib/apt/lists/*_Packages | sort | uniq | awk '{print $1, "BIN"}' > $MCVDIR/bin_packages
-
-# Print Version for the bin_packages
-awk '/^Package:/ { p=$2 } /^Version:/ { print p, $2 }' $HOME/.multidistrotools/${DIST}/var/lib/apt/lists/*_Packages | sort > $MCVDIR/bin_packages
-
-
-# Workaround: debian used to provide a patch to uniq which added a -W option,
-# which provided field-based uniqueness.
-uniqW1(){
-awk 'BEGIN { s = "" } { if ($1 != s) { print $0 ; s = $1} }'
-}
-
-
-# get all the packages
-awk '{print $1, "NOTFOUND"}' $MCVDIR/{src,bin}_packages | sort | uniq > $MCVDIR/all_packages
-# add missing packages to the pkg lists
-for D in src bin; do
-        cat $MCVDIR/{${D},all}_packages | sort --stable -k 1,1 | uniqW1 > $MCVDIR/${D}_packages_complete
-done
-join $MCVDIR/{src,bin}_packages_complete
-
-
-rm -rf $MCVDIR
diff -Nurp ../../svn/pkg-multidistrotools/multidistrotools/trunk/scripts/compare-src-bin.pl ./scripts/compare-src-bin.pl
--- ../../svn/pkg-multidistrotools/multidistrotools/trunk/scripts/compare-src-bin.pl	2013-12-08 09:53:47.470079564 +0100
+++ ./scripts/compare-src-bin.pl	1970-01-01 01:00:00.000000000 +0100
@@ -1,159 +0,0 @@
-#!/usr/bin/perl
-#  	 
-# compare-src-bin.pl - Raphael Pinson <raphink@gmail.com> 	 
-# 	 
-# Given a distribution in mdt, this script compares the binaries that should be 	 
-# produced by the sources with the ones really present in the repository 	 
-# 	 
-# The result can be useful to detect binary only uploads or FTBFS packages 	 
-#
-
-use strict;
-use warnings;
-use File::HomeDir;
-use List::MoreUtils qw(uniq);
-
-my $home   = File::HomeDir->my_home;
-my $mdtdir = "$home/.multidistrotools";
-
-my ($dist) = @ARGV;
-
-my $listdir = "$mdtdir/$dist/var/lib/apt/lists";
-
-
-if (! $dist) {
-   die "Usage: mdt compare-src-bin etch";
-}
-
-
-# Sources
-my %src;
-
-# Binaries generated by Sources
-my %src_bin;
-
-# Binaries
-my %bin;
-
-opendir(LISTDIR, $listdir) || die "Could not open dir $listdir : $!\n"; 
-my @all_files = readdir(LISTDIR);
-closedir(LISTDIR);
-
-my @src_files = grep { /.*_Sources$/ } @all_files;
-my @bin_files = grep { /.*_Packages$/ } @all_files;
-
-
-######################################
-### Functions 
-######################################
-
-
-sub parseFile {
-   my ($file) = @_;
-
-   # Parse a source file and returns results as a hash
-
-   open(FILE, "$file") || die("Could not open $file : $!\n");
-
-   # Use %tmp hash to store tmp data
-   my %tmp;
-   my %result;
-
-   while (my $line = <FILE>) {
-      if ( $line =~ m|^$| ) {
-         # Commit data if empty line
-	 if ( $tmp{'Package'} ) {
-	    #print "Committing data for $tmp{'Package'}\n";
-	    while ( my ($field, $data) = each(%tmp) ) {
-	       if ( $field ne "Package" ) {
-                  $result{$tmp{'Package'}}{$field} = $data;
-	       }
-	    }
-	    # Reset %tmp
-	    %tmp = ();
-	 } else {
-            warn "No Package field found. Not committing data.\n";
-	 }
-      } elsif ( $line =~ m|^[a-zA-Z]| ) {
-         # Gather data
-         my ($field, $data) = $line =~ m|([a-zA-z-]+): (.*)$|;
-	 if ($data) {
-	    $tmp{$field} = $data;
-	 }
-      }
-   }
-   close(FILE);
-
-   return \%result;
-}
-
-
-
-
-
-# Read sources
-foreach my $src_file (@src_files) {
-   my $parsed_file = parseFile("$listdir/$src_file");
-   foreach my $package ( keys(%{$parsed_file} ) ) {
-      if ( $src{$package} ) {
-         warn "Source $package is already listed. Not overriding.\n";
-      } else {
-         $src{$package} = $parsed_file->{$package};
-      }
-   }
-}
-
-
-# Build %src_bin hash
-foreach my $package ( keys(%src) ) {
-   if ( $src{$package}{'Binary'} ) {
-      my @binaries = split(", ", $src{$package}{'Binary'});
-      my $version  = $src{$package}{'Version'};
-      foreach my $binary (@binaries) {
-	 if ( $src_bin{$binary} ) {
-	    # TODO: replace if new version is newer (use dpkg --compare-version?)
-            warn "There is already a version for binary $binary. Not replacing.\n";
-	 } else {
-	    $src_bin{$binary} = $version;
-	 }
-      }
-   } else {
-      warn "Source $package has no binaries!\n";
-   }
-}
-
-
-
-# Read binaries
-foreach my $bin_file (@bin_files) {
-   my $parsed_file = parseFile("$listdir/$bin_file");
-   foreach my $package ( keys(%{$parsed_file} ) ) {
-      if ( $bin{$package} ) {
-         warn "Binary $package is already listed. Not overriding.\n";
-      } else {
-         $bin{$package} = $parsed_file->{$package};
-      }
-   }
-}
-
-
-# Get entire list of packages
-my @all_packages = uniq sort ( keys(%src_bin), keys(%bin) );
-
-foreach my $package (@all_packages) {
-   my $line = "$package ";
-   if ( $src_bin{$package} ) {
-      $line .= "$src_bin{$package} ";
-   } else {
-      $line .= "NOTFOUND ";
-   }
-
-   if ( $bin{$package} ) {
-      $line .= "$bin{$package}{'Version'} ";
-   } else {
-      $line .= "NOTFOUND ";
-   }
-
-   print "$line\n";
-}
-
diff -Nurp ../../svn/pkg-multidistrotools/multidistrotools/trunk/scripts/compare-versions.bash ./scripts/compare-versions.bash
--- ../../svn/pkg-multidistrotools/multidistrotools/trunk/scripts/compare-versions.bash	2013-12-08 09:53:47.466079708 +0100
+++ ./scripts/compare-versions.bash	2013-12-08 09:56:02.860038000 +0100
@@ -22,21 +22,21 @@ elif [ "$1" == '--help' ]; then
 	usage
 	exit 1
 fi
-if [ ! -d "$HOME/.multidistrotools/$1" ]; then
+if [ ! -d $HOME/.multidistrotools/$1 ]; then
 	echo "APT tree named $1 doesn't exist in $HOME/.multidistrotools."
 	exit 1
 fi
-DIST1="$1"
-if [ ! -d "$HOME/.multidistrotools/$2" ]; then
+DIST1=$1
+if [ ! -d $HOME/.multidistrotools/$2 ]; then
 	echo "APT tree named $2 doesn't exist in $HOME/.multidistrotools."
 	exit 1
 fi
-DIST2="$2"
+DIST2=$2
 
 MCVDIR=$(mktemp -d /tmp/MCV.XXXXXX)
 
-for D in "$DIST1" "$DIST2"; do
-	cat "~/.multidistrotools/${D}/var/lib/apt/lists/*_Sources" | awk '/^Package:/ { p = $2 } /^Version:/ { print p, $2 }' | sort > "$MCVDIR/${D}_packages"
+for D in $DIST1 $DIST2; do
+	cat ~/.multidistrotools/${D}/var/lib/apt/lists/*_Sources | awk '/^Package:/ { p = $2 } /^Version:/ { print p, $2 }' | sort > $MCVDIR/${D}_packages
 done
 
 # Workaround: debian used to provide a patch to uniq which added a -W option,
@@ -46,11 +46,10 @@ awk 'BEGIN { s = "" } { if ($1 != s) { p
 }
 
 # get all the packages
-awk '{print $1, "NOTFOUND"}' "$MCVDIR/${DIST1}_packages" "$MCVDIR/${DIST2}_packages" | sort | uniq > "$MCVDIR/all_packages"
+awk '{print $1, "NOTFOUND"}' $MCVDIR/{${DIST1},${DIST2}}_packages | sort | uniq > $MCVDIR/all_packages
 # add missing packages to the pkg lists
-for D in "$DIST1" "$DIST2"; do
-	cat "$MCVDIR/${D}_packages" "$MCVDIR/all_packages"| sort --stable -k 1,1 | uniqW1 > "$MCVDIR/${D}_packages_complete"
+for D in $DIST1 $DIST2; do
+	cat $MCVDIR/{${D},all}_packages | sort --stable -k 1,1 | uniqW1 > $MCVDIR/${D}_packages_complete
 done
-join "$MCVDIR/${DIST1}_packages_complete" "$MCVDIR/${DIST2}_packages_complete"
-
-rm -rf "$MCVDIR"
+join $MCVDIR/{${DIST1},${DIST2}}_packages_complete
+rm -rf $MCVDIR
diff -Nurp ../../svn/pkg-multidistrotools/multidistrotools/trunk/scripts/compare-versions.pl ./scripts/compare-versions.pl
--- ../../svn/pkg-multidistrotools/multidistrotools/trunk/scripts/compare-versions.pl	2013-12-08 09:53:47.466079708 +0100
+++ ./scripts/compare-versions.pl	1970-01-01 01:00:00.000000000 +0100
@@ -1,131 +0,0 @@
-#!/usr/bin/perl
-#  	 
-# compare-versions.pl - Raphael Pinson <raphink@gmail.com> 	 
-# 	 
-
-use strict;
-use warnings;
-use File::HomeDir;
-use List::MoreUtils qw(uniq);
-
-#########################################
-
-
-# Configuration
-################
-
-my $home   = File::HomeDir->my_home;
-my $mdtdir = "$home/.multidistrotools";
-
-my %listdir;
-
-my %packages;
-
-my %all_files;
-my %dist_files;
-
-
-# Arguments
-############
-
-my ($dist1,$dist2) = @ARGV;
-
-if ( ! $dist1 || ! $dist2 ) {
-   die "Usage: mdt compare-versions sarge etch";
-}
-
-
-# Initialisation
-#################
-
-$listdir{$dist1} = "$mdtdir/$dist1/var/lib/apt/lists";
-$listdir{$dist2} = "$mdtdir/$dist2/var/lib/apt/lists";
-
-foreach my $dist ($dist1, $dist2) {
-   opendir(LISTDIR, $listdir{$dist}) || die "Could not open dir $listdir{$dist} : $!\n"; 
-   @{$all_files{$dist}} = readdir(LISTDIR);
-   closedir(LISTDIR);
-
-   @{$dist_files{$dist}} = grep { /.*_Sources$/ } @{$all_files{$dist}};
-}
-
-
-# Execution
-############
-
-
-# Parse files for each dist
-foreach my $dist ($dist1, $dist2) {
-   foreach my $file ( @{$dist_files{$dist}} ) {
-      my $parsed_file = parseFile("$listdir{$dist}/$file");
-      foreach my $package ( keys(%{$parsed_file}) ) {
-         if ( $packages{$dist}{$package} ) {
-            warn "Package $package is already listed for $dist. Not overriding.\n";
-	 } else {
-            $packages{$dist}{$package} = $parsed_file->{$package};
-	 }
-      }
-   }
-}
-
-
-# Get entire list of packages
-my @all_packages = uniq sort ( keys(%{$packages{$dist1}}), keys(%{$packages{$dist2}}) );
-
-
-# Compare each dist with full list and output
-foreach my $package (@all_packages) {
-   my $line = "$package ";
-
-   foreach my $dist ($dist1, $dist2) {
-      if ( $packages{$dist}{$package} ) {
-         $line .= "$packages{$dist}{$package}{'Version'} ";
-      } else {
-         $line .= "NOTFOUND ";
-      }
-   }
-   print "$line\n";
-}
-
-
-# Functions 
-############
-
-sub parseFile {
-   my ($file) = @_;
-
-   # Parse a source file and returns results as a hash
-
-   open(FILE, "$file") || die("Could not open $file : $!\n");
-
-   # Use %tmp hash to store tmp data
-   my %tmp;
-   my %result;
-
-   while (my $line = <FILE>) {
-      if ( $line =~ m|^$| ) {
-         # Commit data if empty line
-	 if ( $tmp{'Package'} ) {
-	    #print "Committing data for $tmp{'Package'}\n";
-	    while ( my ($field, $data) = each(%tmp) ) {
-	       if ( $field ne "Package" ) {
-                  $result{$tmp{'Package'}}{$field} = $data;
-	       }
-	    }
-	    # Reset %tmp
-	    %tmp = ();
-	 } else {
-            warn "No Package field found. Not committing data.\n";
-	 }
-      } elsif ( $line =~ m|^[a-zA-Z]| ) {
-         # Gather data
-         my ($field, $data) = $line =~ m|([a-zA-z-]+): (.*)$|;
-	 if ($data) {
-	    $tmp{$field} = $data;
-	 }
-      }
-   }
-   close(FILE);
-
-   return \%result;
-}
diff -Nurp ../../svn/pkg-multidistrotools/multidistrotools/trunk/scripts/depends.bash ./scripts/depends.bash
--- ../../svn/pkg-multidistrotools/multidistrotools/trunk/scripts/depends.bash	2013-12-08 09:53:47.474079421 +0100
+++ ./scripts/depends.bash	2013-12-08 09:56:02.860038000 +0100
@@ -19,7 +19,7 @@ if [ "$1" == '--reverse' -o $1 == '-r' ]
 fi
 
 (for i in $*; do
-	echo "$i"
+	echo $i
 done
 if [ "$REVERSE" == '-r' ]; then
 	LC_ALL=C apt-rdepends $REVERSE $* |grep "Reverse Depends" | awk '{print $3}'
diff -Nurp ../../svn/pkg-multidistrotools/multidistrotools/trunk/scripts/dist-apt-cache.bash ./scripts/dist-apt-cache.bash
--- ../../svn/pkg-multidistrotools/multidistrotools/trunk/scripts/dist-apt-cache.bash	2013-12-08 09:53:47.474079421 +0100
+++ ./scripts/dist-apt-cache.bash	2013-12-08 09:56:02.860038000 +0100
@@ -23,10 +23,10 @@ if [ "$1" == '--help' ]; then
 	exit 1
 fi
 
-ID="$1"
-if [ ! -d "$HOME/.multidistrotools/$ID"	]; then
+ID=$1
+if [ ! -d $HOME/.multidistrotools/$ID ]; then
 	echo "APT tree named $ID doesn't exist in $HOME/.multidistrotools."
 	exit 1
 fi
 shift
-APT_CONFIG=$HOME/.multidistrotools/$ID/etc/apt/apt.conf apt-cache -o "Dir=$HOME/.multidistrotools/$ID/" -o "Dir::State::status=$HOME/.multidistrotools/$ID/var/lib/dpkg/status" $*
+apt-cache -o Dir=$HOME/.multidistrotools/$ID/ -o Dir::State::status=$HOME/.multidistrotools/$ID/var/lib/dpkg/status $*
diff -Nurp ../../svn/pkg-multidistrotools/multidistrotools/trunk/scripts/dist-apt-get.bash ./scripts/dist-apt-get.bash
--- ../../svn/pkg-multidistrotools/multidistrotools/trunk/scripts/dist-apt-get.bash	2013-12-08 09:53:47.470079564 +0100
+++ ./scripts/dist-apt-get.bash	2013-12-08 09:56:02.860038000 +0100
@@ -23,10 +23,10 @@ if [ "$1" == '--help' ]; then
 	exit 1
 fi
 
-ID="$1"
+ID=$1
 if [ ! -d $HOME/.multidistrotools/$ID ]; then
 	echo "APT tree named $ID doesn't exist in $HOME/.multidistrotools."
 	exit 1
 fi
 shift
-APT_CONFIG=$HOME/.multidistrotools/$ID/etc/apt/apt.conf apt-get -o "Dir=$HOME/.multidistrotools/$ID/" -o "Dir::State::status=$HOME/.multidistrotools/$ID/var/lib/dpkg/status" $*
+apt-get -o Dir=$HOME/.multidistrotools/$ID/ -o Dir::State::status=$HOME/.multidistrotools/$ID/var/lib/dpkg/status $*
diff -Nurp ../../svn/pkg-multidistrotools/multidistrotools/trunk/scripts/dist-create.bash ./scripts/dist-create.bash
--- ../../svn/pkg-multidistrotools/multidistrotools/trunk/scripts/dist-create.bash	2013-12-08 09:53:47.470079564 +0100
+++ ./scripts/dist-create.bash	2013-12-08 09:56:02.860038000 +0100
@@ -9,14 +9,14 @@
 #   - Skip debian-installer section from deb-src sources.list line
 
 usage() {
-	cat <<EOF
+	cat > /dev/stdout <<EOF
 This script create an APT tree for the given distribution under
 ~/.multidistrotools. You can think of it as a chroot, even if it is not
 the case (it is a much lighter aproach). Later, this tree can be
 used with mdt dist-apt-get and mdt-dist-apt-cache.
 
 Syntax:
-  mdt dist-create [-a <arch>] <id> <mirror, dist and sections for sources.list>
+  mdt dist-create <id> <mirror, dist and sections for sources.list>
 
 Examples:
 * Create a Debian Sid tree named 'sid' with main and contrib sections:
@@ -34,15 +34,9 @@ if [ "$1" == '--help' ]; then
 	exit 1
 fi
 
-if [ "$1" == '-a' ]; then
-	ARCH=$2
-	ID=$3
-else
-	ID=$1
-fi
-
-
+ID=$1
 SUITE_HOME=$HOME/.multidistrotools/$ID
+shift
 SETTINGS=$*
 CHROOT_DIRS="etc/apt var/lib/apt/lists/partial var/lib/dpkg var/cache/apt/archives/partial"
 
@@ -51,14 +45,6 @@ for d in $CHROOT_DIRS; do
 done
 touch $SUITE_HOME/var/lib/dpkg/status
 
-if [[ -n $ARCH ]]; then
-    cat << __EOF > $SUITE_HOME/etc/apt/apt.conf
-APT {
-   Architecture "$ARCH";
-   }
-__EOF
-fi
-
 echo "deb $SETTINGS" > $SUITE_HOME/etc/apt/sources.list
 echo "deb-src $SETTINGS" | sed 's,[a-z]*/debian-installer,,g;s,  , ,g' >> $SUITE_HOME/etc/apt/sources.list
 echo "You can now edit manually the sources.list file to tweak settings."
diff -Nurp ../../svn/pkg-multidistrotools/multidistrotools/trunk/scripts/dist-grep-dctrl-packages.bash ./scripts/dist-grep-dctrl-packages.bash
--- ../../svn/pkg-multidistrotools/multidistrotools/trunk/scripts/dist-grep-dctrl-packages.bash	2013-12-08 09:53:47.470079564 +0100
+++ ./scripts/dist-grep-dctrl-packages.bash	2013-12-08 09:56:02.860038000 +0100
@@ -24,10 +24,10 @@ if [ "$1" == '--help' ]; then
 	exit 1
 fi
 
-ID="$1"
-if [ ! -d "$HOME/.multidistrotools/$ID" ]; then
+ID=$1
+if [ ! -d $HOME/.multidistrotools/$ID ]; then
 	echo "APT tree named $ID doesn't exist in $HOME/.multidistrotools."
 	exit 1
 fi
 shift
-grep-dctrl $* "$HOME/.multidistrotools/$ID/var/lib/apt/lists/*_Packages"
+grep-dctrl $* $HOME/.multidistrotools/$ID/var/lib/apt/lists/*_Packages
diff -Nurp ../../svn/pkg-multidistrotools/multidistrotools/trunk/scripts/filter.rb ./scripts/filter.rb
--- ../../svn/pkg-multidistrotools/multidistrotools/trunk/scripts/filter.rb	1970-01-01 01:00:00.000000000 +0100
+++ ./scripts/filter.rb	2013-12-08 09:56:02.860038000 +0100
@@ -0,0 +1,29 @@
+#!/usr/bin/ruby
+# 
+# filterlist.rb
+# - Lucas Nussbaum <lucas@lucas-nussbaum.net>
+
+def usage
+  puts <<EOF
+This script takes a list (list1) on STDIN, and a list (list2) as $1. It
+outputs the list of lines of list1 matching a word of list2 on STDOUT.
+
+Example:
+cat listwithallpkgs | filterlist.rb mypackages > filteredlistwithallpkgs
+EOF
+exit(0)
+end
+
+if ARGV.length == 0 or ARGV[0] == '--help'
+  usage
+end
+
+h = Hash::new(false)
+IO::read(ARGV[0]).each_line do |l|
+  h[l.chomp] = true
+end
+
+STDIN.each_line do |l|
+  p, r = l.split(' ', 2)
+  puts l if h[p]
+end
diff -Nurp ../../svn/pkg-multidistrotools/multidistrotools/trunk/scripts/list_diff.bash ./scripts/list_diff.bash
--- ../../svn/pkg-multidistrotools/multidistrotools/trunk/scripts/list_diff.bash	1970-01-01 01:00:00.000000000 +0100
+++ ./scripts/list_diff.bash	2013-12-08 09:56:02.860038000 +0100
@@ -0,0 +1,15 @@
+#!/bin/bash
+
+usage() {
+	cat >/dev/stdout <<EOF
+Show the lines with are not in both files given as arguments.
+If one of the files is '-', stdin is used instead.
+EOF
+}
+
+if [ "$1" == '--help' -o $# -ne 2 ]; then
+	usage
+	exit 1
+fi
+
+diff --suppress-common-lines $1 $2 | grep -E '^(<|>)' | cut -c 3-
diff -Nurp ../../svn/pkg-multidistrotools/multidistrotools/trunk/scripts/list_inter.bash ./scripts/list_inter.bash
--- ../../svn/pkg-multidistrotools/multidistrotools/trunk/scripts/list_inter.bash	1970-01-01 01:00:00.000000000 +0100
+++ ./scripts/list_inter.bash	2013-12-08 09:56:02.860038000 +0100
@@ -0,0 +1,16 @@
+#!/bin/bash
+
+usage() {
+	cat >/dev/stdout <<EOF
+Show the lines in common in the two files.
+If one of the files is '-', stdin is used instead.
+EOF
+}
+
+if [ "$1" == '--help' -o $# -ne 2 ]; then
+	usage
+	exit 1
+fi
+
+cat $1 $2 | sort | awk '{ if ($0 == l) { print $0 }; l = $0 }' | uniq
+
diff -Nurp ../../svn/pkg-multidistrotools/multidistrotools/trunk/scripts/list_sub.bash ./scripts/list_sub.bash
--- ../../svn/pkg-multidistrotools/multidistrotools/trunk/scripts/list_sub.bash	1970-01-01 01:00:00.000000000 +0100
+++ ./scripts/list_sub.bash	2013-12-08 09:56:02.860038000 +0100
@@ -0,0 +1,15 @@
+#!/bin/bash
+
+usage() {
+	cat >/dev/stdout <<EOF
+Substract the second file from the first file given as arguments.
+If one of the files is '-', stdin is used instead.
+EOF
+}
+
+if [ "$1" == '--help' -o $# -ne 2 ]; then
+	usage
+	exit 1
+fi
+
+diff --suppress-common-lines $1 $2 | grep -E '^<' | cut -c 3-
diff -Nurp ../../svn/pkg-multidistrotools/multidistrotools/trunk/scripts/list_union.bash ./scripts/list_union.bash
--- ../../svn/pkg-multidistrotools/multidistrotools/trunk/scripts/list_union.bash	1970-01-01 01:00:00.000000000 +0100
+++ ./scripts/list_union.bash	2013-12-08 09:56:02.860038000 +0100
@@ -0,0 +1,15 @@
+#!/bin/bash
+
+usage() {
+	cat >/dev/stdout <<EOF
+Merges the two files given as arguments. If one of the files is
+'-', stdin is used instead.
+EOF
+}
+
+if [ "$1" == '--help' -o $# -ne 2 ]; then
+	usage
+	exit 1
+fi
+
+cat $1 $2 | sort | uniq
diff -Nurp ../../svn/pkg-multidistrotools/multidistrotools/trunk/scripts/popcon.bash ./scripts/popcon.bash
--- ../../svn/pkg-multidistrotools/multidistrotools/trunk/scripts/popcon.bash	2013-12-08 09:53:47.466079708 +0100
+++ ./scripts/popcon.bash	2013-12-08 09:56:02.860038000 +0100
@@ -17,4 +17,4 @@ if [ "$1" == '--help' ]; then
 	exit
 fi
 
-wget -q -O /dev/stdout http://popcon.debian.org/by_inst | grep -v "^#" | awk '{print $2 " " $3 " " $4 " " $5 " " $6 " " $7}'
+wget -q -O /dev/stdout http://popcon.debian.org/by_inst | grep -v "^#" | awk '{print $2}'
diff -Nurp ../../svn/pkg-multidistrotools/multidistrotools/trunk/scripts/removals.py ./scripts/removals.py
--- ../../svn/pkg-multidistrotools/multidistrotools/trunk/scripts/removals.py	1970-01-01 01:00:00.000000000 +0100
+++ ./scripts/removals.py	2013-12-08 09:56:02.860038000 +0100
@@ -0,0 +1,37 @@
+#!/usr/bin/python
+
+import sys
+
+if len(sys.argv) != 3:
+  print 'usage: mdt removals <removals file> <A|B> < versions'
+  sys.exit(1)
+
+sourceremovals = []
+
+rfl = open('removals.txt').readlines()
+
+for i in range(0, len(rfl)):
+  if rfl[i].startswith('====') and i + 1 != len(rfl) and rfl[i+2].startswith('Removed the following') and rfl[i+2].find('unstable') != -1:
+    start = i+4
+    while 1:
+      splitup = rfl[start].split('|')
+      if len(splitup) == 3:
+        if splitup[2].find('source') != -1:
+          sourceremovals.append(splitup[0].strip())
+        start += 1
+      else:
+        break
+
+if sys.argv[2] == 'B':
+  index = 2
+else:
+  index = 1
+
+packages = sys.stdin.readlines()
+
+for package in packages:
+  split = package.split(' ')
+  if split[0] in sourceremovals and split[1] == 'NOTFOUND':
+    split[index] = 'REMOVED'
+  sys.stdout.write(' '.join(split))
+
diff -Nurp ../../svn/pkg-multidistrotools/multidistrotools/trunk/scripts/src2bin.bash ./scripts/src2bin.bash
--- ../../svn/pkg-multidistrotools/multidistrotools/trunk/scripts/src2bin.bash	2013-12-08 09:53:47.470079564 +0100
+++ ./scripts/src2bin.bash	2013-12-08 09:56:02.860038000 +0100
@@ -19,17 +19,17 @@ getbinpkg() {
 #	echo "Getting binary package for $1" > /dev/stderr
 	# all packages with binary.name == source.name don't have a Source header
 	# all packages with binary.name != source.name have a Source header
-	apt-cache showsrc "$1" |grep -E "^Binary:" |cut -c 9- |tr -d ',' |tr ' ' "\n"
+	apt-cache showsrc $1 |grep -E "^Binary:" |cut -c 9- |tr -d ',' |tr ' ' "\n"
 }
 
 if [ $# -eq 0 ]; then
 	while read n; do
-		getbinpkg "$n"
+		getbinpkg $n
 	done | sort | uniq
 else
 	if [ "$1" == '--help' ]; then
 		usage
 	else
-		getbinpkg "$1"
+		getbinpkg $1
 	fi
 fi
diff -Nurp ../../svn/pkg-multidistrotools/multidistrotools/trunk/scripts/unify.bash ./scripts/unify.bash
--- ../../svn/pkg-multidistrotools/multidistrotools/trunk/scripts/unify.bash	2013-12-08 09:53:47.466079708 +0100
+++ ./scripts/unify.bash	2013-12-08 09:56:02.860038000 +0100
@@ -7,4 +7,4 @@ EOF
 	exit 0
 fi
 
-sort | uniq
+sort|uniq
diff -Nurp ../../svn/pkg-multidistrotools/multidistrotools/trunk/scripts/uniqw1.bash ./scripts/uniqw1.bash
--- ../../svn/pkg-multidistrotools/multidistrotools/trunk/scripts/uniqw1.bash	2013-12-08 09:53:47.474079421 +0100
+++ ./scripts/uniqw1.bash	1970-01-01 01:00:00.000000000 +0100
@@ -1,31 +0,0 @@
-#!/bin/bash
-#
-# uniqw.bash - Lucas Nussbaum <lucas@lucas-nussbaum.net>
-#
-# This script reinplements in shell the missing -W option of uniq, which
-# was removed from the Debian package but was quite useful.
-# 
-# TODO/BUGS
-# * implement with a varying number of fields (awk will not be enough)
-
-usage() {
-	echo "mdt uniqw1 < file"
-}
-	
-set -e
-
-if [ $# -ne 0 ]; then
-	usage
-	exit 1
-elif [ "$1" == '--help' ]; then
-	usage
-	exit 1
-fi
-
-# Workaround: debian used to provide a patch to uniq which added a -W option,
-# which provided field-based uniqueness.
-uniqW1(){
-awk 'BEGIN { s = "" } { if ($1 != s) { print $0 ; s = $1} }'
-}
-
-uniqW1
diff -Nurp ../../svn/pkg-multidistrotools/multidistrotools/trunk/scripts/versions2html.rb ./scripts/versions2html.rb
--- ../../svn/pkg-multidistrotools/multidistrotools/trunk/scripts/versions2html.rb	2013-12-08 09:53:47.470079564 +0100
+++ ./scripts/versions2html.rb	2013-12-08 09:56:02.860038000 +0100
@@ -28,11 +28,9 @@ $titleA = 'A'
 $titleB = 'B'
 $description = nil
 $excluded = []
-STATES = [ 'notinA', 'outdatedinA', 'sameversionbutlocalinA', 'sameversion', 'sameversionbutlocalinB', 'sameversionbutlocalinboth', 'outdatedinB', 'notinB' ]
+STATES = [ 'notinA', 'removedfromA', 'outdatedinA', 'outdatedandlocalinA', 'sameversionbutlocalinA', 'sameversionbutrebuildinA', 'sameversion', 'sameversionbutlocalinB', 'sameversionbutrebuildinB', 'sameversionbutlocalinboth', 'outdatedinB', 'outdatedandlocalinB', 'notinB', 'removedfromB' ]
 $commentstitle = []
 $commentsuri = []
-$explanations = Hash::new 
-$actions = Hash::new
 $counts = Hash::new(0)
 $texts = Hash::new("")
 $labels = Hash::new
@@ -59,6 +57,12 @@ opts = OptionParser::new do |opts|
   opts.on("-h", "--ubuntu-build-status", "Fetch Ubuntu build status") do
     $ubuntubuildstatus = true
   end
+  opts.on("-t", "--title TITLE", "Title of page") do |t|
+    $title = t
+  end
+  if not $title
+    $title = "Package"
+  end
   opts.on("-a", "--titleA TITLE", "Title of first column") do |t|
     $titleA = t
   end
@@ -68,14 +72,6 @@ opts = OptionParser::new do |opts|
   opts.on("-s", "--description DESCRIPTION", "Description for the list") do |s|
     $description = s
   end
-  opts.on("-i", "--explanation EXPLANATION", "Set state explanation (eg: \"notinA,binary package only\")") do |t|
-    s, c = t.split(',',2)
-    $explanations[s] = c
-  end
-  opts.on("-j", "--action ACTIONS", "Set state's action to take (eg: \"notinA,make a source package\")") do |t|
-    s, c = t.split(',',2)
-    $actions[s] = c
-  end
   opts.on("-x", "--exclude STATE", "Exclude type from output") do |t|
     if not STATES.include?(t)
       puts "Unknown state: #{t} ! Valid states are #{STATES.join[' ']}."
@@ -94,13 +90,20 @@ opts = OptionParser::new do |opts|
 end
 opts.parse!(ARGV)
 
+
 # labels
 $labels['notinA'] = "Not in #{$titleA}"
+$labels['removedfromA'] = "Removed from #{$titleA}"
 $labels['outdatedinA'] = "Outdated in #{$titleA} (#{$titleB} version &gt; #{$titleA} version)"
+$labels['outdatedandlocalinA'] = "Outdated in #{$titleA} (#{$titleB} version &gt; #{$titleA} version), and #{$titleA} has local changes"
 $labels['notinB'] = "Not in #{$titleB}"
+$labels['removedfromB'] = "Removed from #{$titleB}"
 $labels['outdatedinB'] = "Outdated in #{$titleB} (#{$titleA} version &gt; #{$titleB} version)"
+$labels['outdatedandlocalinB'] = "Outdated in #{$titleB} (#{$titleA} version &gt; #{$titleB} version), and #{$titleB} has local changes"
 $labels['sameversionbutlocalinA'] = "Same version, but #{$titleA} has local changes"
 $labels['sameversionbutlocalinB'] = "Same version, but #{$titleB} has local changes"
+$labels['sameversionbutrebuildinA'] = "Same version, but #{$titleA} has been rebuilt"
+$labels['sameversionbutrebuildinB'] = "Same version, but #{$titleB} has been rebuilt"
 $labels['sameversion'] = "Same version in #{$titleA} and #{$titleB}"
 $labels['sameversionbutlocalinboth'] = "Same version, but both #{$titleA} and #{$titleB} have local changes"
 
@@ -143,7 +146,7 @@ def header
 <html xmlns="http://www.w3.org/1999/xhtml">
 <head>
 
-	<title>Package versions
+	<title>#{$title} versions
   EOF
   if $titleA and $titleB
     puts " in #{$titleA} and #{$titleB}"
@@ -437,7 +440,7 @@ function Browser() {
 </head>
 
 <body>
-<h1>Package versions
+<h1>#{$title} versions
   EOF
   if $titleA and $titleB
     puts " in #{$titleA} and #{$titleB}"
@@ -482,10 +485,9 @@ end
 
 def caption
   puts "<h2>Summary</h2><table class=\"pkglist\">"
-  puts "<tr><th>State</th><th>Number</th><th>Explanation</th><th>Action to take</th></tr>"
   STATES.each do |s|
-    if not $excluded.include?(s)
-      puts "<tr class=\"#{s}\"><td><a href=\"##{s}\">#{$labels[s]}</a></td><td>#{$counts[s]} packages</td><td>#{$explanations[s]}</td><td>#{$actions[s]}</td></tr>"
+    if not $excluded.include?(s) and $counts[s] > 0
+      puts "<tr class=\"#{s}\"><td><a href=\"##{s}\">#{$labels[s]} : #{$counts[s]} packages</a></td></tr>"
     end
   end
   puts "</table>"
@@ -496,21 +498,37 @@ def showversion(va, vb)
     state = "notinA"
   elsif vb == "NOTFOUND"
     state = "notinB"
+  elsif va == "REMOVED"
+    state = "removedfromA"
+  elsif vb == "REMOVED"
+    state = "removedfromB"
   elsif va == vb
     state = "sameversion"
-  elsif va == vb.sub(/(ubuntu|build).*/, '')
+  elsif va == vb.sub(/ubuntu.*/, '')
     state = "sameversionbutlocalinB"
-  elsif vb == va.sub(/(ubuntu|build).*/, '')
+  elsif vb == va.sub(/ubuntu.*/, '')
     state = "sameversionbutlocalinA"
+  elsif va == vb.sub(/build.*/, '')
+    state = "sameversionbutrebuildinB"
+  elsif vb == va.sub(/build.*/, '')
+    state = "sameversionbutrebuildinA"
   elsif va.sub(/(ubuntu|build).*/, '') == vb.sub(/(ubuntu|build).*/, '')
     state = "sameversionbutlocalinboth"
   else
     i = IO::popen("dpkg --compare-versions #{va} lt #{vb}; echo $?")
     case i.read.to_i
     when 1
-      state = "outdatedinB"
+      if vb != vb.sub(/(ubuntu|build).*/, '')
+        state = "outdatedandlocalinB"
+      else
+        state = "outdatedinB"
+      end
     else
-      state = "outdatedinA"
+      if va != va.sub(/(ubuntu|build).*/, '')
+        state = "outdatedandlocalinA"
+      else
+        state = "outdatedinA"
+      end
     end
     i.close
   end
@@ -530,18 +548,30 @@ require 'uri'
 
 def mergelink(package)
   u = "http://merges.ubuntu.com/#{getpooladdr(package)}/"
-  uri = URI::parse(u)
-  http = Net::HTTP::new(uri.host, uri.port)
-  r = http::get(uri.request_uri)
-  if r.response.kind_of?(Net::HTTPOK)
+  #uri = URI::parse(u)
+  #http = Net::HTTP::new(uri.host, uri.port)
+  #r = http::get(uri.request_uri)
+  #if r.response.kind_of?(Net::HTTPOK)
     return "<a href=\"#{u}\"><b>Merge</b></a>&nbsp;"
-  else
-    return ""
-  end
+  #else
+  #  return ""
+  #end
+end
+
+def patchlink(package, b)
+  u = "http://patches.ubuntu.com/#{getpooladdr(package)}/#{package}_#{b}.patch"
+  #uri = URI::parse(u)
+  #http = Net::HTTP::new(uri.host, uri.port)
+  #r = http::get(uri.request_uri)
+  #if r.response.kind_of?(Net::HTTPOK)
+    return "<a href=\"#{u}\"><b>Patch</b></a>&nbsp;"
+  #else
+  #  return ""
+  #end
 end
   
 def fetch_bugs_for_package(pkg)
-  uri = URI::parse("https://launchpad.net/distros/ubuntu/+source/#{pkg}/+bugs-text")
+  uri = URI::parse("https://launchpad.net/ubuntu/+source/#{pkg}/+bugs-text")
   http = Net::HTTP::new(uri.host, uri.port)
   if uri.scheme == 'https'
     http.use_ssl = true 
@@ -564,7 +594,8 @@ class LPBug
 
   ST = Hash::new(10)
   ST[' Fix Released'] = 2
-  ST[' Rejected'] = 2
+  ST[' Invalid'] = 2
+  ST[' Won\'t Fix'] = 2
   ST[' Unknown'] = 1
   ST[nil] = 0
   def parse(text)
@@ -675,7 +706,7 @@ if $ubuntubuildstatus
   ths = []
   $lines.each do |pl|
     ths << Thread::new(pl) do |pl|
-      uri = URI::parse("https://launchpad.net/distros/ubuntu/+source/#{pl.package}/#{pl.b}")
+      uri = URI::parse("https://launchpad.net/ubuntu/+source/#{pl.package}/#{pl.b}")
       http = Net::HTTP::new(uri.host, uri.port)
       if uri.scheme == 'https'
         http.use_ssl = true 
@@ -722,15 +753,17 @@ $lines.each do |pl|
     if $debianlinks
       s += "<td><a href=\"http://packages.qa.debian.org/#{package}\">PTS</a>&nbsp;"
       s += "<a href=\"http://bugs.debian.org/src:#{package}\">BTS</a>&nbsp;"
-      s += "<a href=\"http://buildd.debian.org/build.php?arch=&pkg=#{package}\">buildlog</a> \n"
+      s += "<a href=\"http://changelog.debian.net/#{package}\">changes</a>&nbsp;"
+      s += "<a href=\"http://buildd.debian.org/build.php?arch=&amp;pkg=#{package}\">buildlog</a> \n"
       s += "</td>\n"
     end
     if $ubuntulinks
       s += "<td><a href=\"http://packages.ubuntu.com/src:#{package}\">p.u.c</a>&nbsp;"
-      s += mergelink(package) if state == 'outdatedinB'
-      s += "<a href=\"https://launchpad.net/distros/ubuntu/+source/#{package}\">LP</a>&nbsp;"
-      s += "<a href=\"https://launchpad.net/distros/ubuntu/+source/#{package}/+bugs\">bugs</a>&nbsp;"
-      s += "<a href=\"https://launchpad.net/distros/ubuntu/+source/#{package}/#{b}\">builds</a>&nbsp;"
+      s += mergelink(package) if state == 'outdatedandlocalinB'
+      s += "<a href=\"https://launchpad.net/ubuntu/+source/#{package}\">LP</a>&nbsp;"
+      s += patchlink(package,b) if (state == 'sameversionbutrebuildinB') || (state == 'sameversionbutlocalinB') || (state == 'outdatedandlocalinB')
+      s += "<a href=\"https://launchpad.net/ubuntu/+source/#{package}/+bugs\">bugs</a>&nbsp;"
+      s += "<a href=\"https://launchpad.net/ubuntu/+source/#{package}/#{b}\">builds</a>&nbsp;"
       s += "<a href=\"http://changelogs.ubuntu.com/changelogs/pool/universe/#{getpooladdr(package)}/#{package}_#{b}/changelog\">changes</a>"
       s += "</td>\n"
     end
@@ -739,7 +772,7 @@ $lines.each do |pl|
       pl.bugs.each do |b|
         if $ubuntubugsextended
           bug = $bugsh[b]
-          next if bug.status == ' Fix Released' or bug.status == ' Rejected'
+          next if bug.status == ' Fix Released' or bug.status == ' Invalid' or bug.status == ' Won\'t Fix'
           s += "<a href=\"https://launchpad.net/bugs/#{b}\" title=\"#{bug.text}\">#{b}</a> "
         else
           s += "<a href=\"https://launchpad.net/bugs/#{b}\">#{b}</a> "
@@ -776,11 +809,8 @@ end
 caption
 
 STATES.each do |state|
-  if not $excluded.include?(state)
-    puts "<a name=\"#{state}\"></a>"
-    puts "<h2>#{$labels[state]} : #{$counts[state]} packages</h2>"
-    puts "Explanation: #{$explanations[state]}<br />" if $explanations[state]
-    puts "Action to take: #{$actions[state]}<br /><br />" if $actions[state]
+  if not $excluded.include?(state) and $counts[state] > 0
+    puts "<h2><a id=\"#{state}\" />#{$labels[state]} : #{$counts[state]} packages</h2>"
     tableheader
     puts $texts[state]
     tablefooter
@@ -802,14 +832,11 @@ if $debianlinks or $ubuntulinks
   end
   if $ubuntulinks
     puts <<-EOF
-  <li>Ubuntu's buildd logs :
-  <ul>
-  <li><a href="http://people.ubuntu.com/~lamont/">LaMont's home page</a></li>
-  <li><a href="http://people.ubuntu.com/~lamont/buildLogs/byDate/today.html">Today's logs</a></li>
-  </ul>
-  </li>
     EOF
   end
+  puts <<-EOF
+</ul>
+  EOF
 end
 if $debianbugs
     puts <<-EOF
